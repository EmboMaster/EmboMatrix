(define (problem Please_open_the_backpack.n.01_in_closet_0_and_put_the_chocolate_biscuit.n.01_inside_it_Then_go_to_bathroom_0_and_pick_up_the_teacup.n.02_from_the_reception_desk_and_place_it_inside_the_cooler.n.01_to_freeze_it-0)
    (:domain omnigibson)
    (:objects
        backpack.n.01_1 - backpack.n.01
        chocolate_biscuit.n.01_1 - chocolate_biscuit.n.01
        teacup.n.02_1 - teacup.n.02
        reception_desk.n.01_1 - reception_desk.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (not (open backpack.n.01_1))
        (not (inside chocolate_biscuit.n.01_1 backpack.n.01_1))
        (ontop teacup.n.02_1 reception_desk.n.01_1)
        (inroom backpack.n.01_1 closet_0)
        (inroom chocolate_biscuit.n.01_1 closet_0)
        (inroom reception_desk.n.01_1 bathroom_0)
        (inroom cooler.n.01_1 bathroom_0)
        (inroom floor.n.01_1 closet_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (open ?backpack.n.01_1)
            (inside ?chocolate_biscuit.n.01_1 ?backpack.n.01_1)
            (inside ?teacup.n.02_1 ?cooler.n.01_1)
            (frozen ?teacup.n.02_1)
        )
    )
)