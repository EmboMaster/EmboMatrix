(define (problem pick_up_the_electric_kettle.n.01_from_the_corner_in_the_bathroom_0_and_toggle_on_the_electric_kettle.n.01_then_pick_up_the_chocolate_cake.n.01_from_the_periodic_table_in_the_hall_arch_wood:empty_room_0_and_put_the_chocolate_cake.n.01_inside_the_recycling_bin.n.01_in_the_corridor_0)
    (:domain omnigibson)
    (:objects
        electric_kettle.n.01_1 - electric_kettle.n.01
        chocolate_cake.n.01_1 - chocolate_cake.n.01
        periodic_table.n.01_1 - periodic_table.n.01
        recycling_bin.n.01_1 - recycling_bin.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (inroom electric_kettle.n.01_1 bathroom_0)
        (not (toggled_on electric_kettle.n.01_1))
        (ontop chocolate_cake.n.01_1 periodic_table.n.01_1)
        (inroom periodic_table.n.01_1 empty_room_0)
        (inroom recycling_bin.n.01_1 corridor_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 bathroom_0)
    )

    (:goal
        (and
            (toggled_on ?electric_kettle.n.01_1)
            (inside ?chocolate_cake.n.01_1 ?recycling_bin.n.01_1)
        )
    )
)