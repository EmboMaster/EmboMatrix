(define (problem please_pick_up_the_toy_car_from_the_floor_in_the_playroom_0_and_put_it_on_the_shelf.n.01_in_the_same_room_then_go_to_the_storage_room_1_and_put_the_asparagus.n.02_inside_the_cooler.n.01_to_freeze_it)
    (:domain omnigibson)
    (:objects
        toy_car.n.01_1 - toy_car.n.01
        shelf.n.01_1 - shelf.n.01
        asparagus.n.02_1 - asparagus.n.02
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 floor.n.01_2 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop toy_car.n.01_1 floor.n.01_1)
        (inroom toy_car.n.01_1 playroom_0)
        (inroom shelf.n.01_1 playroom_0)
        (inroom floor.n.01_1 playroom_0)
        (ontop agent.n.01_1 floor.n.01_1)

        (inroom asparagus.n.02_1 storage_room_1)
        (inroom cooler.n.01_1 storage_room_1)
        (inroom floor.n.01_2 storage_room_1)
    )

    (:goal
        (and
            (ontop ?toy_car.n.01_1 ?shelf.n.01_1)
            (inside ?asparagus.n.02_1 ?cooler.n.01_1)
            (frozen ?asparagus.n.02_1)
        )
    )
)