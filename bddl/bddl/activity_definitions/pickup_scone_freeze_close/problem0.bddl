(define (problem pick_up_the_scone.n.01_from_the_serving_cart_in_dining_room_0_and_freeze_it_by_putting_it_inside_the_cooler.n.01_in_kitchen_0_then_close_the_cooler.n.01_to_ensure_the_scone_remains_frozen-0)
    (:domain omnigibson)
    (:objects
        scone.n.01_1 - scone.n.01
        serving_cart.n.01_1 - serving_cart.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop scone.n.01_1 serving_cart.n.01_1)
        (inroom serving_cart.n.01_1 dining_room_0)
        (open cooler.n.01_1)
        (inroom cooler.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 dining_room_0)
    )

    (:goal
        (and
            (inside ?scone.n.01_1 ?cooler.n.01_1)
            (frozen ?scone.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)