(define (problem please_pick_up_the_bok_choy.n.02_from_the_countertop_in_the_kitchen_0_and_cook_it_using_the_oven.n.01_in_the_kitchen_0._After_that,_go_to_the_pantry_room_0,_pick_up_the_cinnamon_roll.n.01_from_the_shelf,_and_put_it_inside_the_cooler.n.01_in_the_pantry_room_0_to_freeze_it-0)
    (:domain omnigibson)
    (:objects
        bok_choy.n.02_1 - bok_choy.n.02
        countertop.n.01_1 - countertop.n.01
        oven.n.01_1 - oven.n.01
        cinnamon_roll.n.01_1 - cinnamon_roll.n.01
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bok_choy.n.02_1 countertop.n.01_1)
        (inroom countertop.n.01_1 kitchen_0)
        (inroom oven.n.01_1 kitchen_0)
        (not
            (toggled_on oven.n.01_1)
        )
        (ontop cinnamon_roll.n.01_1 shelf.n.01_1)
        (inroom shelf.n.01_1 pantry_room_0)
        (inroom cooler.n.01_1 pantry_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (cooked ?bok_choy.n.02_1)
            (and
                (inside ?cinnamon_roll.n.01_1 ?cooler.n.01_1)
                (frozen ?cinnamon_roll.n.01_1)
            )
        )
    )
)