(define (problem pick_up_the_steak.n.01_from_the_cooler.n.01_in_the_kitchen_0_and_place_it_on_the_stove.n.01_in_the_kitchen_0_to_cook_it_then_toggle_on_the_stove.n.01_in_the_kitchen_0_to_start_cooking_the_steak.after_cooking_pick_up_the_steak.n.01_from_the_stove.n.01_and_deliver_it_to_the_dining_room_0.place_it_on_the_breakfast_table_near_the_center_of_the_dining_room_0-0)
    (:domain omnigibson)
    (:objects
        steak.n.01_1 - steak.n.01
        cooler.n.01_1 - cooler.n.01
        stove.n.01_1 - stove.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init 
        (inside steak.n.01_1 cooler.n.01_1) 
        (inroom cooler.n.01_1 kitchen_0) 
        (inroom stove.n.01_1 kitchen_0) 
        (not 
            (toggled_on stove.n.01_1)
        )
        (inroom breakfast_table.n.01_1 dining_room_0) 
        (inroom floor.n.01_1 kitchen_0) 
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal 
        (and 
            (cooked ?steak.n.01_1) 
            (ontop ?steak.n.01_1 ?breakfast_table.n.01_1)
        )
    )
)