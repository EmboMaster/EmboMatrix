(define (problem pick_up_the_carrot.n.03_from_the_console_pedestal_table_in_kitchen_0_put_it_inside_the_mixing_bowl.n.01_on_the_pedestal_table_in_kitchen_0_then_cook_the_carrot.n.03_using_the_oven.n.01_in_kitchen_0)
    (:domain omnigibson)
    (:objects
        carrot.n.03_1 - carrot.n.03
        console_table.n.01_1 - console_table.n.01
        mixing_bowl.n.01_1 - mixing_bowl.n.01
        pedestal_table.n.01_1 - pedestal_table.n.01
        oven.n.01_1 - oven.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop carrot.n.03_1 console_table.n.01_1)
        (ontop mixing_bowl.n.01_1 pedestal_table.n.01_1)
        (not (toggled_on oven.n.01_1))
        (inroom carrot.n.03_1 kitchen_0)
        (inroom console_table.n.01_1 kitchen_0)
        (inroom mixing_bowl.n.01_1 kitchen_0)
        (inroom pedestal_table.n.01_1 kitchen_0)
        (inroom oven.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?carrot.n.03_1 ?mixing_bowl.n.01_1)
            (cooked ?carrot.n.03_1)
            (toggled_on ?oven.n.01_1)
            (inside ?carrot.n.03_1 ?oven.n.01_1)
        )
    )
)