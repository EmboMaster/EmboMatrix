(define (problem pick_up_the_carton_from_the_floor_of_the_storage_room_0_open_the_carton_put_the_kiwi.n.03_inside_the_carton_and_then_close_the_carton_finally_bring_the_carton_to_the_cooler_in_the_bathroom_0_and_place_it_inside_to_freeze_the_kiwi)
    (:domain omnigibson)
    (:objects
        carton.n.02_1 - carton.n.02
        kiwi.n.03_1 - kiwi.n.03
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop carton.n.02_1 floor.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (ontop kiwi.n.03_1 floor.n.01_1)
        (inroom carton.n.02_1 storage_room_0)
        (inroom kiwi.n.03_1 storage_room_0)
        (inroom floor.n.01_1 storage_room_0)
        (inroom cooler.n.01_1 bathroom_0)
        (not
            (open carton.n.02_1)
        )
    )

    (:goal
        (and
            (not
                (open ?carton.n.02_1)
            )
            (inside ?kiwi.n.03_1 ?carton.n.02_1)
            (inside ?carton.n.02_1 ?cooler.n.01_1)
            (frozen ?kiwi.n.03_1)
        )
    )
)