(define (problem please_pick_up_the_tenderloin.n.02_from_the_cooler.n.01_in_the_kitchen_0_and_put_it_inside_the_oven.n.01_in_the_kitchen_0._cook_the_tenderloin.n.02_using_the_oven.n.01._meanwhile,_toggle_on_the_coffee_maker.n.01_in_the_dining_room_0_to_prepare_coffee_for_the_family-0)
    (:domain omnigibson)
    (:objects
        tenderloin.n.02_1 - tenderloin.n.02
        cooler.n.01_1 - cooler.n.01
        oven.n.01_1 - oven.n.01
        coffee_maker.n.01_1 - coffee_maker.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (inside tenderloin.n.02_1 cooler.n.01_1)
        (not (toggled_on oven.n.01_1))
        (not (toggled_on coffee_maker.n.01_1))
        (inroom cooler.n.01_1 kitchen_0)
        (inroom oven.n.01_1 kitchen_0)
        (inroom coffee_maker.n.01_1 dining_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (inside ?tenderloin.n.02_1 ?oven.n.01_1)
            (cooked ?tenderloin.n.02_1)
            (toggled_on ?oven.n.01_1)
            (toggled_on ?coffee_maker.n.01_1)
        )
    )
)