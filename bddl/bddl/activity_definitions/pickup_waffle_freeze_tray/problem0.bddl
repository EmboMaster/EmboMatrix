(define (problem Pick_up_the_waffle.n.01_from_the_breakfast_table_in_the_living_room_0._Go_to_the_kitchen_0_and_put_the_waffle.n.01_inside_the_cooler.n.01_to_freeze_it._Then_go_to_the_corridor_0_and_pick_up_the_tray.n.01_from_the_console_table._Place_the_tray.n.01_on_the_coffee_table_in_the_living_room_0.)
    (:domain omnigibson)
    (:objects
        waffle.n.01_1 - waffle.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        cooler.n.01_1 - cooler.n.01
        tray.n.01_1 - tray.n.01
        console_table.n.01_1 - console_table.n.01
        coffee_table.n.01_1 - coffee_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop waffle.n.01_1 breakfast_table.n.01_1)
        (ontop tray.n.01_1 console_table.n.01_1)
        (inroom breakfast_table.n.01_1 living_room_0)
        (inroom coffee_table.n.01_1 living_room_0)
        (inroom waffle.n.01_1 living_room_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom console_table.n.01_1 corridor_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 living_room_0)
    )

    (:goal
        (and
            (frozen ?waffle.n.01_1)
            (inside ?waffle.n.01_1 ?cooler.n.01_1)
            (ontop ?tray.n.01_1 ?coffee_table.n.01_1)
        )
    )
)