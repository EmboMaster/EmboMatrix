(define (problem go_to_dining_room_0_pick_up_the_bagel.n.01_from_the_booth_put_it_inside_the_toaster_oven.n.01_cook_the_bagel.n.01_then_pick_it_up_from_the_toaster_oven.n.01_and_put_it_on_top_of_the_breakfast_table)
    (:domain omnigibson)
    (:objects
        bagel.n.01_1 - bagel.n.01
        booth.n.01_1 - booth.n.01
        toaster_oven.n.01_1 - toaster_oven.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bagel.n.01_1 booth.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (not (toggled_on toaster_oven.n.01_1))
        (inroom booth.n.01_1 dining_room_0)
        (inroom toaster_oven.n.01_1 dining_room_0)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (inroom bagel.n.01_1 dining_room_0)
        (inroom floor.n.01_1 dining_room_0)
    )

    (:goal
        (and
            (cooked ?bagel.n.01_1)
            (ontop ?bagel.n.01_1 ?breakfast_table.n.01_1)
        )
    )
)