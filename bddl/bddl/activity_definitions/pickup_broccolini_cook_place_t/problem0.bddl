(define (problem pick_up_the_broccolini_from_the_refrigerator_in_the_kitchen_0_cook_it_using_the_stove_in_the_kitchen_0_then_place_the_cooked_broccolini_on_the_breakfast_table_in_the_living_room_0)
    (:domain omnigibson)
    (:objects
        broccolini.n.01_1 - broccolini.n.01
        cooler.n.01_1 - cooler.n.01
        stove.n.01_1 - stove.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (inside broccolini.n.01_1 cooler.n.01_1)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom stove.n.01_1 kitchen_0)
        (not
            (toggled_on stove.n.01_1)
        )
        (inroom breakfast_table.n.01_1 living_room_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (cooked ?broccolini.n.01_1)
            (ontop ?broccolini.n.01_1 ?breakfast_table.n.01_1)
        )
    )
)