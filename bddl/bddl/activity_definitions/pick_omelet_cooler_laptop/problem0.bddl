(define (problem Please_pick_up_the_omelet.n.01_from_the_booth_in_the_bathroom_0_put_it_inside_the_cooler.n.01_in_the_bathroom_0_and_ensure_the_cooler_remains_closed._Then_return_to_the_bedroom_0_and_open_the_laptop.n.01_on_the_desk.)
    (:domain omnigibson)
    (:objects
        omelet.n.01_1 - omelet.n.01
        cooler.n.01_1 - cooler.n.01
        booth.n.01_1 - booth.n.01
        laptop.n.01_1 - laptop.n.01
        desk.n.01_1 - desk.n.01
        floor.n.01_1 floor.n.01_2 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop omelet.n.01_1 booth.n.01_1)
        (not (open cooler.n.01_1))
        (ontop laptop.n.01_1 desk.n.01_1)
        (inroom booth.n.01_1 bathroom_0)
        (inroom cooler.n.01_1 bathroom_0)
        (inroom floor.n.01_1 bathroom_0)
        (inroom desk.n.01_1 bedroom_0)
        (inroom laptop.n.01_1 bedroom_0)
        (inroom floor.n.01_2 bedroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?omelet.n.01_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
            (open ?laptop.n.01_1)
        )
    )
)