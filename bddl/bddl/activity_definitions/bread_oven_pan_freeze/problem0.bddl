(define (problem Pick_up_the_bread_slice.n.01_from_the_reception_desk_in_the_kitchen_0_put_it_inside_the_oven.n.01_in_the_kitchen_0_and_cook_it_Then_pick_up_the_frying_pan.n.01_from_the_reception_desk_in_the_kitchen_0_and_put_it_inside_the_cooler.n.01_in_the_kitchen_0_to_freeze_it-0)
    (:domain omnigibson)
    (:objects
        bread_slice.n.01_1 - bread_slice.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        oven.n.01_1 - oven.n.01
        frying_pan.n.01_1 - frying_pan.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (ontop bread_slice.n.01_1 reception_desk.n.01_1)
        (ontop frying_pan.n.01_1 reception_desk.n.01_1)
        (not
            (toggled_on oven.n.01_1)
        )
        (inroom bread_slice.n.01_1 kitchen_0)
        (inroom reception_desk.n.01_1 kitchen_0)
        (inroom oven.n.01_1 kitchen_0)
        (inroom frying_pan.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (cooked ?bread_slice.n.01_1)
            (frozen ?frying_pan.n.01_1)
        )
    )
)