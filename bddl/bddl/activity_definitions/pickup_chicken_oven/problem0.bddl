(define (problem please_pick_up_the_chicken_leg.n.01_from_the_booth_in_kitchen_0_and_put_it_inside_the_oven.n.01_in_kitchen_0_then_toggle_on_the_oven.n.01_to_cook_the_chicken_leg.n.01-0)
    (:domain omnigibson)
    (:objects
        chicken_leg.n.01_1 - chicken_leg.n.01
        booth.n.01_1 - booth.n.01
        oven.n.01_1 - oven.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop chicken_leg.n.01_1 booth.n.01_1)
        (inroom booth.n.01_1 kitchen_0)
        (inroom oven.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (not
            (toggled_on oven.n.01_1)
        )
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?chicken_leg.n.01_1 ?oven.n.01_1)
            (toggled_on ?oven.n.01_1)
            (cooked ?chicken_leg.n.01_1)
        )
    )
)