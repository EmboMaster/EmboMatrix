(define (problem pick_up_the_lime.n.06_from_the_shelf_in_the_pantry_room_0_put_it_inside_the_cooler.n.01_in_the_storage_room_0_to_freeze_it_and_then_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        lime.n.06_1 - lime.n.06
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (inside lime.n.06_1 shelf.n.01_1)
        (inroom shelf.n.01_1 pantry_room_0)
        (inroom cooler.n.01_1 storage_room_0)
        (open cooler.n.01_1)
        (inroom floor.n.01_1 pantry_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (frozen ?lime.n.06_1)
            (inside ?lime.n.06_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)