(define (problem pick_up_the_bagel_dough_from_the_shelf_in_the_kitchen_and_put_it_inside_the_cooler_to_freeze_and_close_the_cooler_afterward-0)
    (:domain omnigibson)
    (:objects
        bagel_dough.n.01_1 - bagel_dough.n.01
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop bagel_dough.n.01_1 shelf.n.01_1)
        (open cooler.n.01_1)
        (inroom shelf.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (inside ?bagel_dough.n.01_1 ?cooler.n.01_1)
            (frozen ?bagel_dough.n.01_1)
            (not 
                (open ?cooler.n.01_1)
            )
        )
    )
)