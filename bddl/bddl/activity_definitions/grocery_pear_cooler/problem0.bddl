(define (problem go_to_the_grocery_store_cafe_pick_up_the_pear.n.01_from_the_breakfast_table_put_it_inside_the_cooler.n.01_and_close_the_cooler.n.01_lid)
    (:domain omnigibson)
    (:objects
        pear.n.01_1 - pear.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop pear.n.01_1 breakfast_table.n.01_1)
        (open cooler.n.01_1)
        (inroom breakfast_table.n.01_1 corridor_0)
        (inroom cooler.n.01_1 corridor_0)
        (inroom floor.n.01_1 corridor_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?pear.n.01_1 ?cooler.n.01_1)
            (frozen ?pear.n.01_1)
            (not
                (open ?cooler.n.01_1)
            )
        )
    )
)