(define (problem pick_up_the_cauliflower.n.02_from_the_shelf.n.01_in_the_storage_room_0_open_the_cooler.n.01_in_the_storage_room_0_put_the_cauliflower.n.02_inside_the_cooler.n.01_in_the_storage_room_0_close_the_cooler.n.01_in_the_storage_room_0)
    (:domain omnigibson)
    (:objects
        cauliflower.n.02_1 - cauliflower.n.02
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop cauliflower.n.02_1 shelf.n.01_1)
        (not (open cooler.n.01_1))
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom shelf.n.01_1 storage_room_0)
        (inroom cooler.n.01_1 storage_room_0)
        (inroom cauliflower.n.02_1 storage_room_0)
        (inroom floor.n.01_1 storage_room_0)
    )

    (:goal
        (and
            (inside ?cauliflower.n.02_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)