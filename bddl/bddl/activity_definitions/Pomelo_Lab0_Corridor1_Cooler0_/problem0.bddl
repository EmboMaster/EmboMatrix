(define (problem Pick_up_the_pomelo.n.02_from_the_biology_lab_0_and_transport_it_through_corridor_1_to_the_cooler.n.01_in_corridor_0._Put_the_pomelo.n.02_inside_the_cooler.n.01_to_freeze_it._Then_return_to_biology_lab_0_and_toggle_on_the_lab_exhaust_hood.n.01_again_if_it_is_off.)
    (:domain omnigibson)
    (:objects
        pomelo.n.02_1 - pomelo.n.02
        cooler.n.01_1 - cooler.n.01
        lab_exhaust_hood.n.01_1 - lab_exhaust_hood.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (inroom pomelo.n.02_1 biology_lab_0)
        (inroom cooler.n.01_1 corridor_0)
        (inroom lab_exhaust_hood.n.01_1 biology_lab_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 biology_lab_0)
        (not
            (toggled_on lab_exhaust_hood.n.01_1)
        )
    )

    (:goal
        (and
            (frozen ?pomelo.n.02_1)
            (inside ?pomelo.n.02_1 ?cooler.n.01_1)
            (toggled_on ?lab_exhaust_hood.n.01_1)
        )
    )
)