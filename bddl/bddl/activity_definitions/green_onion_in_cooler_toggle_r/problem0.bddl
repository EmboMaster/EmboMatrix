(define (problem put_the_green_onion.n.01_inside_the_cooler.n.01_in_bedroom_0_to_preserve_it_then_toggle_on_the_radiator.n.02_in_bedroom_0_to_warm_up_the_room_for_the_coupleâ€™s_comfort)
    (:domain omnigibson)
    (:objects
        green_onion.n.01_1 - green_onion.n.01
        cooler.n.01_1 - cooler.n.01
        radiator.n.02_1 - radiator.n.02
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom green_onion.n.01_1 bedroom_0)
        (inroom cooler.n.01_1 bedroom_0)
        (inroom radiator.n.02_1 bedroom_0)
        (inroom floor.n.01_1 bedroom_0)
        (not
            (toggled_on radiator.n.02_1)
        )
    )

    (:goal
        (and
            (inside ?green_onion.n.01_1 ?cooler.n.01_1)
            (frozen ?green_onion.n.01_1)
            (toggled_on ?radiator.n.02_1)
        )
    )
)