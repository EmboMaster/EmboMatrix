(define (problem go_to_pantry_room_0_pick_up_the_gourd.n.02_from_the_shelf_go_to_kitchen_0_put_the_gourd.n.02_inside_the_cooler.n.01_go_to_dining_room_0_pick_up_the_pitcher.n.02_from_the_breakfast_table_go_to_living_room_0_put_the_pitcher.n.02_on_top_of_the_coffee_breakfast_table-0)
    (:domain omnigibson)
    (:objects
        gourd.n.02_1 - gourd.n.02
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        pitcher.n.02_1 - pitcher.n.02
        breakfast_table.n.01_1 - breakfast_table.n.01
        coffee_table.n.01_1 - coffee_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop gourd.n.02_1 shelf.n.01_1)
        (inroom shelf.n.01_1 pantry_room_0)
        (inroom cooler.n.01_1 kitchen_0)
        (ontop pitcher.n.02_1 breakfast_table.n.01_1)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (inroom coffee_table.n.01_1 living_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 pantry_room_0)
        (not (frozen gourd.n.02_1))
    )

    (:goal
        (and
            (frozen ?gourd.n.02_1)
            (inside ?gourd.n.02_1 ?cooler.n.01_1)
            (ontop ?pitcher.n.02_1 ?coffee_table.n.01_1)
        )
    )
)