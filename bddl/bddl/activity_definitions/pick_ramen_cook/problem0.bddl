(define (problem please_pick_up_the_ramen.n.01_from_the_booth_in_the_kitchen_0_place_it_inside_the_pressure_cooker.n.01_in_the_kitchen_0_and_toggle_on_the_pressure_cooker.n.01_to_cook_it-0)
    (:domain omnigibson)
    (:objects
        ramen.n.01_1 - ramen.n.01
        pressure_cooker.n.01_1 - pressure_cooker.n.01
        booth.n.01_1 - booth.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop ramen.n.01_1 booth.n.01_1)
        (not
            (toggled_on pressure_cooker.n.01_1)
        )
        (inroom booth.n.01_1 kitchen_0)
        (inroom pressure_cooker.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (toggled_on ?pressure_cooker.n.01_1)
            (inside ?ramen.n.01_1 ?pressure_cooker.n.01_1)
            (cooked ?ramen.n.01_1)
        )
    )
)