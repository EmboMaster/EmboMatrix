(define (problem pick_up_the_vase.n.01_from_the_table_lamp_in_the_bedroom_0_go_to_the_corridor_0_and_put_the_vase.n.01_on_top_of_the_shelf.n.01_in_the_closet_0_then_open_the_backpack.n.01_in_the_closet_0)
    (:domain omnigibson)
    (:objects
        vase.n.01_1 - vase.n.01
        table_lamp.n.01_1 - table_lamp.n.01
        shelf.n.01_1 - shelf.n.01
        backpack.n.01_1 - backpack.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop vase.n.01_1 table_lamp.n.01_1)
        (inroom table_lamp.n.01_1 bedroom_0)
        (inroom vase.n.01_1 bedroom_0)
        (inroom shelf.n.01_1 closet_0)
        (inroom backpack.n.01_1 closet_0)
        (not (open backpack.n.01_1))
        (inroom floor.n.01_1 bedroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (ontop ?vase.n.01_1 ?shelf.n.01_1)
            (open ?backpack.n.01_1)
        )
    )
)