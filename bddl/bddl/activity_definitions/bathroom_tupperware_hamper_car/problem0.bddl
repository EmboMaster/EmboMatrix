(define (problem go_to_the_bathroom_0_pick_up_the_tupperware.n.01_from_the_shelf_in_the_bathroom_0_and_put_it_inside_the_hamper.n.02_in_the_bathroom_0_then_pick_up_the_carton.n.02_from_the_floor_in_the_bathroom_0_and_close_the_carton.n.02_in_the_bathroom_0)
    (:domain omnigibson)
    (:objects
        tupperware.n.01_1 - tupperware.n.01
        shelf.n.01_1 - shelf.n.01
        hamper.n.02_1 - hamper.n.02
        carton.n.02_1 - carton.n.02
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop tupperware.n.01_1 shelf.n.01_1)
        (ontop carton.n.02_1 floor.n.01_1)
        (inroom hamper.n.02_1 bathroom_0)
        (inroom shelf.n.01_1 bathroom_0)
        (inroom floor.n.01_1 bathroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?tupperware.n.01_1 ?hamper.n.02_1)
            (not 
                (open ?carton.n.02_1)
            )
        )
    )
)