(define (problem please_pick_up_the_carton.n.02_from_the_corridor_0_open_the_carton.n.02_and_bring_the_notebook_inside_it_to_the_conference_table_in_the_hall_arch_wood:empty_room_0_put_the_notebook_on_top_of_the_conference_table_and_close_the_carton.n.02)
    (:domain omnigibson)
    (:objects
        carton.n.02_1 - carton.n.02
        notebook.n.01_1 - notebook.n.01
        conference_table.n.01_1 - conference_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (inside notebook.n.01_1 carton.n.02_1)
        (inroom carton.n.02_1 corridor_0)
        (inroom conference_table.n.01_1 empty_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 corridor_0)
    )
    
    (:goal
        (and
            (ontop ?notebook.n.01_1 ?conference_table.n.01_1)
            (not
                (open ?carton.n.02_1)
            )
        )
    )
)