(define (problem pick_up_the_duffel_bag_from_the_bed_in_the_bedroom_0_and_put_it_on_top_of_the_shelf_in_the_storage_room_0_open_the_cooler_in_the_storage_room_0_and_put_the_cherry.n.03_inside_to_freeze_it_for_future_use)
    (:domain omnigibson)
    (:objects
        duffel_bag.n.01_1 - duffel_bag.n.01
        bed.n.01_1 - bed.n.01
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        cherry.n.03_1 - cherry.n.03
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop duffel_bag.n.01_1 bed.n.01_1)
        (inroom bed.n.01_1 bedroom_0)
        (inroom shelf.n.01_1 storage_room_0)
        (inroom cooler.n.01_1 storage_room_0)
        (inroom cherry.n.03_1 storage_room_0)
        (not (open cooler.n.01_1))
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 bedroom_0)
    )

    (:goal
        (and
            (ontop ?duffel_bag.n.01_1 ?shelf.n.01_1)
            (open ?cooler.n.01_1)
            (inside ?cherry.n.03_1 ?cooler.n.01_1)
            (frozen ?cherry.n.03_1)
        )
    )
)