(define (problem open_the_backpack.n.01_in_empty_room_0_and_put_the_apple.n.01_inside_the_pitcher.n.02_in_bathroom_0)
    (:domain omnigibson)
    (:objects
        backpack.n.01_1 - backpack.n.01
        apple.n.01_1 - apple.n.01
        pitcher.n.02_1 - pitcher.n.02
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (not 
            (open backpack.n.01_1)
        )
        (inroom backpack.n.01_1 empty_room_0)
        (inroom apple.n.01_1 bathroom_0)
        (inroom pitcher.n.02_1 bathroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 empty_room_0)
    )

    (:goal
        (and
            (open ?backpack.n.01_1)
            (inside ?apple.n.01_1 ?pitcher.n.02_1)
        )
    )
)