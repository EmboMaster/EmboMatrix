(define (problem Please_pick_up_the_green_onion.n.01_from_the_console_table_in_the_kitchen_0_and_cook_it_using_the_pressure_cooker.n.01_in_the_kitchen_0._Then,_pick_up_the_coffee_cup.n.01_from_the_shelf_in_the_dining_room_0_and_put_it_inside_the_cooler.n.01_in_the_kitchen_0.)
    (:domain omnigibson)
    (:objects
        green_onion.n.01_1 - green_onion.n.01
        pressure_cooker.n.01_1 - pressure_cooker.n.01
        cooler.n.01_1 - cooler.n.01
        coffee_cup.n.01_1 - coffee_cup.n.01
        console_table.n.01_1 - console_table.n.01
        shelf.n.01_1 - shelf.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop green_onion.n.01_1 console_table.n.01_1)
        (ontop coffee_cup.n.01_1 shelf.n.01_1)
        (not (toggled_on pressure_cooker.n.01_1))
        (inroom console_table.n.01_1 kitchen_0)
        (inroom pressure_cooker.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom shelf.n.01_1 dining_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (cooked ?green_onion.n.01_1)
            (inside ?coffee_cup.n.01_1 ?cooler.n.01_1)
        )
    )
)