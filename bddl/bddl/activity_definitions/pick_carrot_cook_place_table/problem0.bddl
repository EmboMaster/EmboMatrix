(define (problem please_pick_up_the_carrot.n.03_from_the_tray.n.01_in_the_utility_room_0_cook_it_using_the_pressure_cooker.n.01_in_the_utility_room_0_and_place_the_cooked_carrot.n.03_on_the_breakfast_table.n.01_in_the_corridor_0)
    (:domain omnigibson)
    (:objects
        carrot.n.03_1 - carrot.n.03
        tray.n.01_1 - tray.n.01
        pressure_cooker.n.01_1 - pressure_cooker.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside carrot.n.03_1 tray.n.01_1) 
        (not 
            (cooked carrot.n.03_1)
        )
        (inroom tray.n.01_1 utility_room_0) 
        (inroom pressure_cooker.n.01_1 utility_room_0) 
        (not 
            (toggled_on pressure_cooker.n.01_1)
        )
        (inroom breakfast_table.n.01_1 corridor_0) 
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 utility_room_0)
    )
    
    (:goal 
        (and 
            (cooked ?carrot.n.03_1)
            (ontop ?carrot.n.03_1 ?breakfast_table.n.01_1)
        )
    )
)