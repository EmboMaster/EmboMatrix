(define (problem pick_up_the_bagel_dough.n.01_from_the_reception_desk_in_the_kitchen_0_open_the_oven.n.01_in_the_kitchen_0_place_the_bagel_dough.n.01_inside_the_oven.n.01_toggle_on_the_oven.n.01_in_the_kitchen_0_to_cook_it_and_close_the_oven.n.01)
    (:domain omnigibson)
    (:objects
        bagel_dough.n.01_1 - bagel_dough.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        oven.n.01_1 - oven.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bagel_dough.n.01_1 reception_desk.n.01_1) ; The bagel dough is on the counter
        (not (toggled_on oven.n.01_1)) ; The oven is toggled off
        (not (open oven.n.01_1)) ; The oven is closed
        (inroom reception_desk.n.01_1 kitchen_0) ; The counter is in the kitchen
        (inroom oven.n.01_1 kitchen_0) ; The oven is in the kitchen
        (inroom floor.n.01_1 kitchen_0) ; The floor is in the kitchen
        (ontop agent.n.01_1 floor.n.01_1) ; The agent is on the floor
    )

    (:goal
        (and
            (inside ?bagel_dough.n.01_1 ?oven.n.01_1) ; The bagel dough is inside the oven
            (toggled_on ?oven.n.01_1) ; The oven is toggled on
            (not (open ?oven.n.01_1)) ; The oven is closed
        )
    )
)