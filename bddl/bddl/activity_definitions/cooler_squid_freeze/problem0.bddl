(define (problem open_the_cooler_n_01_in_utility_room_0_pick_up_the_squid_n_01_from_the_reception_desk_in_kitchen_0_freeze_the_squid_n_01_by_putting_it_inside_the_cooler_n_01_in_utility_room_0_then_close_the_cooler_n_01-0)
    (:domain omnigibson)
    (:objects
        cooler.n.01_1 - cooler.n.01
        squid.n.01_1 - squid.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (not (open cooler.n.01_1))
        (ontop squid.n.01_1 reception_desk.n.01_1)
        (inroom cooler.n.01_1 utility_room_0)
        (inroom reception_desk.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (not (open ?cooler.n.01_1))
            (inside ?squid.n.01_1 ?cooler.n.01_1)
            (frozen ?squid.n.01_1)
        )
    )
)