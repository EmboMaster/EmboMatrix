(define (problem open_the_laptop.n.01_on_the_desk_in_the_office_large_then_pick_up_the_notebook_from_the_shelf.n.01_in_the_bathroom_0_and_place_it_next_to_the_laptop.n.01)
    (:domain omnigibson)
    (:objects
        laptop.n.01_1 - laptop.n.01
        desk.n.01_1 - desk.n.01
        notebook.n.01_1 - notebook.n.01
        shelf.n.01_1 - shelf.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop laptop.n.01_1 desk.n.01_1)
        (not
            (open laptop.n.01_1)
        )
        (inside notebook.n.01_1 shelf.n.01_1)
        (inroom desk.n.01_1 corridor_2)
        (inroom shelf.n.01_1 bathroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 corridor_2)
    )

    (:goal
        (and
            (open ?laptop.n.01_1)
            (ontop ?notebook.n.01_1 ?desk.n.01_1)
        )
    )
)