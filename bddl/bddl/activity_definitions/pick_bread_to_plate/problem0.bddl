(define (problem please_pick_up_the_bread_slice.n.01_from_the_reception_desk_in_the_kitchen_0_place_it_inside_the_saucepot.n.01_on_the_stove.n.01_and_cook_it_using_the_stove.n.01_once_done_bring_the_cooked_bread_slice.n.01_to_the_breakfast_table_in_the_dining_room_0_and_place_it_on_the_plate.n.04-0)
    (:domain omnigibson)
    (:objects
        bread_slice.n.01_1 - bread_slice.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        saucepot.n.01_1 - saucepot.n.01
        stove.n.01_1 - stove.n.01
        plate.n.04_1 - plate.n.04
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop bread_slice.n.01_1 reception_desk.n.01_1)
        (ontop saucepot.n.01_1 stove.n.01_1)
        (not 
            (toggled_on stove.n.01_1)
        )
        (ontop plate.n.04_1 breakfast_table.n.01_1)
        (inroom reception_desk.n.01_1 kitchen_0)
        (inroom saucepot.n.01_1 kitchen_0)
        (inroom stove.n.01_1 kitchen_0)
        (inroom plate.n.04_1 dining_room_0)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )
    
    (:goal 
        (and 
            (cooked ?bread_slice.n.01_1)
            (ontop ?bread_slice.n.01_1 ?plate.n.04_1)
            (ontop ?plate.n.04_1 ?breakfast_table.n.01_1)
        )
    )
)