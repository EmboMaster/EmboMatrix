(define (problem Please_pick_up_the_dumpling.n.01_from_the_carton.n.02_in_empty_room_0_and_put_it_inside_the_cooler.n.01_in_empty_room_0_to_freeze_it._Then_pick_up_the_shredder.n.01_from_the_straight_chair_in_empty_room_0_and_toggle_it_on_to_test_its_functionality-0)
    (:domain omnigibson)
    (:objects
        dumpling.n.01_1 - dumpling.n.01
        carton.n.02_1 - carton.n.02
        cooler.n.01_1 - cooler.n.01
        shredder.n.01_1 - shredder.n.01
        straight_chair.n.01_1 - straight_chair.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (inside dumpling.n.01_1 carton.n.02_1)
        (ontop shredder.n.01_1 straight_chair.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom carton.n.02_1 empty_room_0)
        (inroom cooler.n.01_1 empty_room_0)
        (inroom straight_chair.n.01_1 empty_room_0)
        (inroom shredder.n.01_1 empty_room_0)
        (inroom floor.n.01_1 empty_room_0)
    )
    
    (:goal 
        (and 
            (frozen ?dumpling.n.01_1)
            (inside ?dumpling.n.01_1 ?cooler.n.01_1)
            (toggled_on ?shredder.n.01_1)
        )
    )
)