(define (problem go_to_kitchen_0_pick_up_the_apple.n.01_from_the_booth_in_the_kitchen_0_go_to_storage_room_1_open_the_cooler.n.01_in_the_storage_room_1_put_the_apple.n.01_inside_the_cooler.n.01_in_the_storage_room_1_close_the_cooler.n.01_in_the_storage_room_1_go_to_living_room_0_pick_up_the_paperback_book_from_the_coffee_table_in_the_living_room_0_place_the_paperback_book_on_the_paperback_shelf_in_the_living_room_0)
    (:domain omnigibson)
    (:objects
        apple.n.01_1 - apple.n.01
        cooler.n.01_1 - cooler.n.01
        booth.n.01_1 - booth.n.01
        paperback_book.n.01_1 - paperback_book.n.01
        coffee_table.n.01_1 - coffee_table.n.01
        shelf.n.01_1 - shelf.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop apple.n.01_1 booth.n.01_1)
        (ontop paperback_book.n.01_1 coffee_table.n.01_1)
        (not (open cooler.n.01_1))
        (inroom booth.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 storage_room_1)
        (inroom coffee_table.n.01_1 living_room_0)
        (inroom shelf.n.01_1 living_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (inside ?apple.n.01_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
            (ontop ?paperback_book.n.01_1 ?shelf.n.01_1)
        )
    )
)