(define (problem Pick_up_the_backpack.n.01_from_the_bed_in_bedroom_1_open_it_and_place_the_teacup.n.02_from_the_dining_room_0_inside_the_backpack.n.01_Then_close_the_backpack.n.01_and_bring_it_to_bedroom_0-0)
    (:domain omnigibson)
    (:objects
        backpack.n.01_1 - backpack.n.01
        bed.n.01_1 - bed.n.01
        teacup.n.02_1 - teacup.n.02
        floor.n.01_1 floor.n.01_2 floor.n.01_3 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop backpack.n.01_1 bed.n.01_1)
        (ontop teacup.n.02_1 floor.n.01_2)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom bed.n.01_1 bedroom_1)
        (inroom floor.n.01_1 bedroom_1)
        (inroom floor.n.01_2 dining_room_0)
        (inroom floor.n.01_3 bedroom_0)
        (not (open backpack.n.01_1))
    )

    (:goal
        (and
            (inside ?teacup.n.02_1 ?backpack.n.01_1)
            (not (open ?backpack.n.01_1))
            (ontop ?backpack.n.01_1 ?floor.n.01_3)
        )
    )
)