(define (problem pick_up_the_dumpling.n.01_from_the_countertop_in_the_private_office_0_place_it_inside_the_toaster_oven.n.01_in_the_private_office_0_and_cook_the_dumpling.n.01_until_it_is_ready)
    (:domain omnigibson)
    (:objects
        dumpling.n.01_1 - dumpling.n.01
        countertop.n.01_1 - countertop.n.01
        toaster_oven.n.01_1 - toaster_oven.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop dumpling.n.01_1 countertop.n.01_1)
        (inroom countertop.n.01_1 private_office_0)
        (inroom toaster_oven.n.01_1 private_office_0)
        (not (toggled_on toaster_oven.n.01_1))
        (inroom floor.n.01_1 private_office_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (cooked ?dumpling.n.01_1)
            (inside ?dumpling.n.01_1 ?toaster_oven.n.01_1)
            (toggled_on ?toaster_oven.n.01_1)
        )
    )
)