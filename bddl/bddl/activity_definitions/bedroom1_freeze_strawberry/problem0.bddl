(define (problem go_to_bedroom_1_open_the_backpack.n.01_on_the_bed_pick_up_the_strawberry.n.01_inside_the_backpack.n.01_and_go_to_the_utility_room_0_to_place_the_strawberry.n.01_inside_the_cooler.n.01_to_freeze_it_close_the_backpack.n.01_in_bedroom_1_after_freezing_the_strawberry.n.01)
    (:domain omnigibson)
    (:objects
        backpack.n.01_1 - backpack.n.01
        bed.n.01_1 - bed.n.01
        strawberry.n.01_1 - strawberry.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 floor.n.01_2 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop backpack.n.01_1 bed.n.01_1)
        (inside strawberry.n.01_1 backpack.n.01_1)
        (not
            (open backpack.n.01_1)
        )
        (inroom bed.n.01_1 bedroom_1)
        (inroom backpack.n.01_1 bedroom_1)
        (inroom floor.n.01_1 bedroom_1)
        (inroom cooler.n.01_1 utility_room_0)
        (inroom floor.n.01_2 utility_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (frozen ?strawberry.n.01_1)
            (inside ?strawberry.n.01_1 ?cooler.n.01_1)
            (not
                (open ?backpack.n.01_1)
            )
        )
    )
)