(define (problem please_pick_up_the_kale.n.03_from_the_booth_in_kitchen_0_and_cook_it_on_the_burner.n.02._Then,_open_the_electric_cauldron.n.01_in_the_dining_room_0_and_place_the_cooked_kale.n.03_inside_it.)
    (:domain omnigibson)
    (:objects
        kale.n.03_1 - kale.n.03
        booth.n.01_1 - booth.n.01
        burner.n.02_1 - burner.n.02
        electric_cauldron.n.01_1 - electric_cauldron.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop kale.n.03_1 booth.n.01_1)
        (not 
            (toggled_on burner.n.02_1)
        )
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom booth.n.01_1 kitchen_0)
        (inroom burner.n.02_1 kitchen_0)
        (inroom electric_cauldron.n.01_1 dining_room_0)
        (inroom floor.n.01_1 kitchen_0)
    )
    
    (:goal 
        (and 
            (cooked ?kale.n.03_1)
            (inside ?kale.n.03_1 ?electric_cauldron.n.01_1)
            (open ?electric_cauldron.n.01_1)
        )
    )
)