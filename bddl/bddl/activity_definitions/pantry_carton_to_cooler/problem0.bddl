(define (problem Go_to_the_pantry_room_0_pick_up_the_carton.n.02_from_the_shelf_and_put_it_inside_the_cooler.n.01_in_the_kitchen_0_to_store_it_then_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        shelf.n.01_1 - shelf.n.01
        carton.n.02_1 - carton.n.02
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop carton.n.02_1 shelf.n.01_1)
        (inroom shelf.n.01_1 pantry_room_0)
        (inroom carton.n.02_1 pantry_room_0)
        (inroom cooler.n.01_1 kitchen_0)
        (open cooler.n.01_1)
        (inroom floor.n.01_1 pantry_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (inside ?carton.n.02_1 ?cooler.n.01_1)
            (not 
                (open ?cooler.n.01_1)
            )
        )
    )
)