(define (problem please_pick_up_the_bagel.n.01_from_the_countertop_in_kitchen_0_and_cook_it_using_the_stove.n.01_in_kitchen_0._then,_place_the_cooked_bagel.n.01_on_the_breakfast_table_in_dining_room_0.)
    (:domain omnigibson)
    (:objects
        bagel.n.01_1 - bagel.n.01
        countertop.n.01_1 - countertop.n.01
        stove.n.01_1 - stove.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bagel.n.01_1 countertop.n.01_1)
        (not (toggled_on stove.n.01_1))
        (inroom countertop.n.01_1 kitchen_0)
        (inroom stove.n.01_1 kitchen_0)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (cooked ?bagel.n.01_1)
            (ontop ?bagel.n.01_1 ?breakfast_table.n.01_1)
        )
    )
)