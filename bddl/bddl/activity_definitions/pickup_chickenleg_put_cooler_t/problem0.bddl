(define (problem please_pick_up_the_chicken_leg.n.01_from_the_reception_desk_in_the_kitchen_0_put_it_inside_the_cooler.n.01_in_the_kitchen_0_and_ensure_the_cooler_is_closed_next_toggle_on_the_coffee_maker.n.01_on_the_reception_desk_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        chicken_leg.n.01_1 - chicken_leg.n.01
        cooler.n.01_1 - cooler.n.01
        coffee_maker.n.01_1 - coffee_maker.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop chicken_leg.n.01_1 reception_desk.n.01_1)
        (ontop coffee_maker.n.01_1 reception_desk.n.01_1)
        (not (toggled_on coffee_maker.n.01_1))
        (not (open cooler.n.01_1))
        (inroom cooler.n.01_1 kitchen_0)
        (inroom reception_desk.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?chicken_leg.n.01_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
            (toggled_on ?coffee_maker.n.01_1)
        )
    )
)