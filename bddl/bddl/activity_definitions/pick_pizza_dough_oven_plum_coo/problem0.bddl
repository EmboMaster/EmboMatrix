(define (problem please_pick_up_the_pizza_dough.n.01_from_the_console_table_in_the_dining_room_0_and_put_it_inside_the_oven.n.01_in_the_dining_room_0_to_cook_then_pick_up_the_plum.n.02_from_the_shopping_basket_in_the_dining_room_0_and_place_it_inside_the_cooler.n.01_in_the_garage_0_to_freeze-0)
    (:domain omnigibson)
    (:objects
        pizza_dough.n.01_1 - pizza_dough.n.01
        console_table.n.01_1 - console_table.n.01
        oven.n.01_1 - oven.n.01
        plum.n.02_1 - plum.n.02
        shopping_basket.n.01_1 - shopping_basket.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop pizza_dough.n.01_1 console_table.n.01_1)
        (inside plum.n.02_1 shopping_basket.n.01_1)
        (not (toggled_on oven.n.01_1))
        (inroom console_table.n.01_1 dining_room_0)
        (inroom oven.n.01_1 dining_room_0)
        (inroom shopping_basket.n.01_1 dining_room_0)
        (inroom cooler.n.01_1 garage_0)
        (inroom floor.n.01_1 dining_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and 
            (and 
                (cooked pizza_dough.n.01_1)
                (inside pizza_dough.n.01_1 oven.n.01_1)
                (toggled_on oven.n.01_1)
            )
            (and 
                (frozen plum.n.02_1)
                (inside plum.n.02_1 cooler.n.01_1)
            )
        )
    )
)