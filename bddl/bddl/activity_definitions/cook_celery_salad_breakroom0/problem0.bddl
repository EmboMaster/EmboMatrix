(define (problem please_pick_up_the_celery.n.02_from_the_countertop_in_break_room_0_and_cook_it_using_the_pressure_cooker.n.01_in_break_room_0._Then,_pick_up_the_salad.n.01_from_the_cooler.n.01_in_break_room_0_and_place_it_on_the_conference_table_in_break_room_0)
    (:domain omnigibson)
    (:objects
        celery.n.02_1 - celery.n.02
        pressure_cooker.n.01_1 - pressure_cooker.n.01
        salad.n.01_1 - salad.n.01
        cooler.n.01_1 - cooler.n.01
        conference_table.n.01_1 - conference_table.n.01
        countertop.n.01_1 - countertop.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop celery.n.02_1 countertop.n.01_1)
        (ontop pressure_cooker.n.01_1 countertop.n.01_1)
        (not 
            (toggled_on pressure_cooker.n.01_1)
        )
        (inside salad.n.01_1 cooler.n.01_1)
        (inroom conference_table.n.01_1 break_room_0)
        (inroom countertop.n.01_1 break_room_0)
        (inroom cooler.n.01_1 break_room_0)
        (inroom floor.n.01_1 break_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (cooked ?celery.n.02_1)
            (inside ?celery.n.02_1 ?pressure_cooker.n.01_1)
            (toggled_on ?pressure_cooker.n.01_1)
            (ontop ?salad.n.01_1 ?conference_table.n.01_1)
        )
    )
)