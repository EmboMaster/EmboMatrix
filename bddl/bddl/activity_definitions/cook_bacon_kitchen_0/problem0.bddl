(define (problem go_to_room_dining_room_0_pick_up_the_bacon.n.01_from_the_breakfast_table_in_the_dining_room_0_go_to_room_kitchen_0_put_the_bacon.n.01_inside_the_electric_cauldron.n.01_in_the_kitchen_0_toggle_on_appliance_electric_cauldron.n.01_to_cook_bacon.n.01_close_the_electric_cauldron.n.01_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        bacon.n.01_1 - bacon.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        electric_cauldron.n.01_1 - electric_cauldron.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bacon.n.01_1 breakfast_table.n.01_1)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (inroom electric_cauldron.n.01_1 kitchen_0)
        (not (toggled_on electric_cauldron.n.01_1))
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 dining_room_0)
    )

    (:goal
        (and
            (cooked ?bacon.n.01_1)
            (inside ?bacon.n.01_1 ?electric_cauldron.n.01_1)
            (toggled_on ?electric_cauldron.n.01_1)
            (not (open ?electric_cauldron.n.01_1))
        )
    )
)