(define (problem pick_up_the_pizza_dough_from_the_countertop_in_the_kitchen_0_take_it_to_the_cooler_in_the_pantry_room_0_and_place_the_pizza_dough_inside_the_cooler_n_01_to_freeze_it_then_pick_up_the_pitcher_from_the_shelf_in_the_pantry_room_0_and_place_it_on_the_breakfast_table_in_the_living_room_0)
    (:domain omnigibson)
    (:objects
        pizza_dough.n.01_1 - pizza_dough.n.01
        countertop.n.01_1 - countertop.n.01
        cooler.n.01_1 - cooler.n.01
        shelf.n.01_1 - shelf.n.01
        pitcher.n.02_1 - pitcher.n.02
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop pizza_dough.n.01_1 countertop.n.01_1)
        (inroom countertop.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 pantry_room_0)
        (inroom shelf.n.01_1 pantry_room_0)
        (inside pitcher.n.02_1 shelf.n.01_1)
        (inroom breakfast_table.n.01_1 living_room_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (frozen ?pizza_dough.n.01_1)
            (inside ?pizza_dough.n.01_1 ?cooler.n.01_1)
            (ontop ?pitcher.n.02_1 ?breakfast_table.n.01_1)
        )
    )
)