(define (problem pick_up_the_kale.n.03_from_the_shelf.n.01_in_grocery_store_0_then_go_to_the_cooler.n.01_in_grocery_store_0_open_the_cooler.n.01_put_the_kale.n.03_inside_it_and_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        kale.n.03_1 - kale.n.03
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop kale.n.03_1 shelf.n.01_1)
        (inroom shelf.n.01_1 grocery_store_0)
        (not (open cooler.n.01_1))
        (inroom cooler.n.01_1 grocery_store_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 grocery_store_0)
    )

    (:goal
        (and
            (inside ?kale.n.03_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)