(define (problem pick_up_the_pineapple.n.02_from_the_hose_cart_in_the_dining_room_0_go_to_the_kitchen_0_put_the_pineapple.n.02_inside_the_cooler.n.01_and_ensure_the_cooler.n.01_is_closed)
    (:domain omnigibson)
    (:objects
        pineapple.n.02_1 - pineapple.n.02
        hose_cart.n.01_1 - hose_cart.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop pineapple.n.02_1 hose_cart.n.01_1)
        (inroom hose_cart.n.01_1 dining_room_0)
        (inroom cooler.n.01_1 kitchen_0)
        (open cooler.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 dining_room_0)
    )

    (:goal
        (and
            (inside ?pineapple.n.02_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)