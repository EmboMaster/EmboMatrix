(define (problem Pick_up_the_hamburger.n.01_from_the_shelf_in_the_storage_room_0_go_to_the_garage_0_and_put_it_inside_the_cooler.n.01_to_freeze_it_After_that_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        hamburger.n.01_1 - hamburger.n.01
        shelf.n.01_1 - shelf.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop hamburger.n.01_1 shelf.n.01_1)
        (open cooler.n.01_1)
        (inroom shelf.n.01_1 storage_room_0)
        (inroom cooler.n.01_1 garage_0)
        (inroom floor.n.01_1 storage_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (frozen ?hamburger.n.01_1)
            (inside ?hamburger.n.01_1 ?cooler.n.01_1)
            (not
                (open ?cooler.n.01_1)
            )
        )
    )
)