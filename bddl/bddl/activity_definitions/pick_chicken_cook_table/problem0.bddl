(define (problem please_pick_up_the_chicken_leg.n.01_from_the_booth_in_the_utility_room_0_cook_it_using_the_pressure_cooker.n.01_in_the_utility_room_0_and_place_the_cooked_chicken_leg.n.01_on_the_breakfast_table_in_the_living_room_0)
    (:domain omnigibson)
    (:objects
        chicken_leg.n.01_1 - chicken_leg.n.01
        booth.n.01_1 - booth.n.01
        pressure_cooker.n.01_1 - pressure_cooker.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (ontop chicken_leg.n.01_1 booth.n.01_1)
        (ontop pressure_cooker.n.01_1 booth.n.01_1)
        (not 
            (toggled_on pressure_cooker.n.01_1)
        )
        (inroom booth.n.01_1 utility_room_0)
        (inroom pressure_cooker.n.01_1 utility_room_0)
        (inroom breakfast_table.n.01_1 living_room_0)
        (inroom floor.n.01_1 utility_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (cooked ?chicken_leg.n.01_1)
            (ontop ?chicken_leg.n.01_1 ?breakfast_table.n.01_1)
        )
    )
)