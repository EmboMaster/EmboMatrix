(define (problem Pick_up_the_duffel_bag.n.01_from_the_bench_in_the_corridor_0_put_it_inside_the_cooler.n.01_in_the_bathroom_0_and_ensure_the_cooler.n.01_is_properly_closed)
    (:domain omnigibson)
    (:objects
        duffel_bag.n.01_1 - duffel_bag.n.01
        bench.n.01_1 - bench.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop duffel_bag.n.01_1 bench.n.01_1)
        (inroom bench.n.01_1 corridor_0)
        (inroom cooler.n.01_1 bathroom_0)
        (open cooler.n.01_1)
        (inroom floor.n.01_1 corridor_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (inside ?duffel_bag.n.01_1 ?cooler.n.01_1)
            (not
                (open ?cooler.n.01_1)
            )
        )
    )
)