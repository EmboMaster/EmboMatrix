(define (problem Please_pick_up_the_carrot.n.03_from_the_countertop_in_bathroom_1_go_to_closet_1_open_the_cooler.n.01_put_the_carrot.n.03_inside_the_cooler.n.01_and_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        carrot.n.03_1 - carrot.n.03
        countertop.n.01_1 - countertop.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (ontop carrot.n.03_1 countertop.n.01_1)
        (not (open cooler.n.01_1))
        (inroom countertop.n.01_1 bathroom_1)
        (inroom cooler.n.01_1 closet_1)
        (inroom floor.n.01_1 bathroom_1)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (inside ?carrot.n.03_1 ?cooler.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)