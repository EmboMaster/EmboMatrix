(define (problem pick_up_the_salmon_from_the_countertop_in_the_kitchen_0_put_it_inside_the_cooler_in_the_kitchen_0_to_freeze_it_and_then_close_the_cooler_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        salmon.n.03_1 - salmon.n.03
        countertop.n.01_1 - countertop.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (ontop salmon.n.03_1 countertop.n.01_1)
        (open cooler.n.01_1)
        (inroom countertop.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal 
        (and
            (frozen ?salmon.n.03_1)
            (inside ?salmon.n.03_1 ?cooler.n.01_1)
            (not
                (open ?cooler.n.01_1)
            )
        )
    )
)