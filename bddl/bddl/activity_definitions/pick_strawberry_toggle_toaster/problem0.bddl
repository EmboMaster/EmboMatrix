(define (problem please_pick_up_the_strawberry_from_the_tupperware_in_the_bedroom_1_go_to_the_private_office_0_toggle_on_the_toaster_n_02_and_cook_the_strawberry_using_the_toaster_n_02_in_the_private_office_0)
    (:domain omnigibson)
    (:objects
        strawberry.n.01_1 - strawberry.n.01
        tupperware.n.01_1 - tupperware.n.01
        toaster.n.02_1 - toaster.n.02
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init
        (inside strawberry.n.01_1 tupperware.n.01_1)
        (inroom tupperware.n.01_1 bedroom_1)
        (inroom toaster.n.02_1 private_office_0)
        (not (toggled_on toaster.n.02_1))
        (inroom floor.n.01_1 bedroom_1)
        (ontop agent.n.01_1 floor.n.01_1)
    )
    
    (:goal
        (and
            (toggled_on ?toaster.n.02_1)
            (cooked ?strawberry.n.01_1)
        )
    )
)