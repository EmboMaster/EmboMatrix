(define (problem Take_the_bacon.n.01_from_the_board_in_bedroom_0_put_the_bacon.n.01_inside_the_cooler.n.01_in_storage_room_0_to_freeze_it_and_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        bacon.n.01_1 - bacon.n.01
        board.n.02_1 - board.n.02
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop bacon.n.01_1 board.n.02_1)
        (inroom board.n.02_1 bedroom_0)
        (inroom cooler.n.01_1 storage_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 bedroom_0)
    )

    (:goal
        (and
            (inside ?bacon.n.01_1 ?cooler.n.01_1)
            (frozen ?bacon.n.01_1)
            (not (open ?cooler.n.01_1))
        )
    )
)