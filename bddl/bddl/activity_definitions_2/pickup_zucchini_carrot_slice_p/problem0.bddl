(define (problem pick_up_the_zucchini.n.02_and_carrot.n.03_from_the_reception_desk_in_the_kitchen_0_slice_them_with_the_table_knife.n.01_on_the_chopping_board_in_the_kitchen_0_and_place_the_sliced_pieces_on_the_plate.n.04_on_the_breakfast_table_in_the_living_room_0)
    (:domain omnigibson)
    (:objects
        zucchini.n.02_1 - zucchini.n.02
        carrot.n.03_1 - carrot.n.03
        table_knife.n.01_1 - table_knife.n.01
        chopping_board.n.01_1 - chopping_board.n.01
        plate.n.04_1 - plate.n.04
        breakfast_table.n.01_1 - breakfast_table.n.01
        reception_desk.n.01_1 - reception_desk.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop zucchini.n.02_1 reception_desk.n.01_1)
        (ontop carrot.n.03_1 reception_desk.n.01_1)
        (ontop table_knife.n.01_1 chopping_board.n.01_1)
        (ontop chopping_board.n.01_1 reception_desk.n.01_1)
        (ontop plate.n.04_1 breakfast_table.n.01_1)
        (inroom reception_desk.n.01_1 kitchen_0)
        (inroom chopping_board.n.01_1 kitchen_0)
        (inroom table_knife.n.01_1 kitchen_0)
        (inroom zucchini.n.02_1 kitchen_0)
        (inroom carrot.n.03_1 kitchen_0)
        (inroom breakfast_table.n.01_1 living_room_0)
        (inroom plate.n.04_1 living_room_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (sliced ?zucchini.n.02_1)
            (sliced ?carrot.n.03_1)
            (inside ?zucchini.n.02_1 ?plate.n.04_1)
            (inside ?carrot.n.03_1 ?plate.n.04_1)
        )
    )
)