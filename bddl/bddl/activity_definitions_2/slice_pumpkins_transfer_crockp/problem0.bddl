(define (problem slice_all_2_pumpkins_on_the_counter_in_the_kitchen_0_using_the_cleaver.n.01_and_transfer_the_sliced_pieces_into_the_crock_pot.n.01_on_the_stove_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        pumpkin.n.02_1 pumpkin.n.02_2 - pumpkin.n.02
        cleaver.n.01_1 - cleaver.n.01
        board.n.02_1 - board.n.02
        stove.n.01_1 - stove.n.01
        crock_pot.n.01_1 - crock_pot.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop pumpkin.n.02_1 board.n.02_1)
        (ontop pumpkin.n.02_2 board.n.02_1)
        (ontop cleaver.n.01_1 board.n.02_1)
        (ontop crock_pot.n.01_1 stove.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom board.n.02_1 kitchen_0)
        (inroom stove.n.01_1 kitchen_0)
        (inroom crock_pot.n.01_1 kitchen_0)
        (inroom pumpkin.n.02_1 kitchen_0)
        (inroom pumpkin.n.02_2 kitchen_0)
        (inroom cleaver.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (sliced ?pumpkin.n.02_1)
            (sliced ?pumpkin.n.02_2)
            (inside ?pumpkin.n.02_1 ?crock_pot.n.01_1)
            (inside ?pumpkin.n.02_2 ?crock_pot.n.01_1)
        )
    )
)