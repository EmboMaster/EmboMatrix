(define (problem pick_up_the_cleaver.n.01_from_the_booth_in_the_grocery_store_0_and_slice_all_2_watermelons.n.02_on_the_pool_table_in_the_grocery_store_0)
    (:domain omnigibson)
    (:objects
        cleaver.n.01_1 - cleaver.n.01
        booth.n.01_1 - booth.n.01
        watermelon.n.02_1 watermelon.n.02_2 - watermelon.n.02
        pool_table.n.01_1 - pool_table.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop cleaver.n.01_1 booth.n.01_1)
        (ontop watermelon.n.02_1 pool_table.n.01_1)
        (ontop watermelon.n.02_2 pool_table.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom cleaver.n.01_1 grocery_store_0)
        (inroom booth.n.01_1 grocery_store_0)
        (inroom watermelon.n.02_1 grocery_store_0)
        (inroom watermelon.n.02_2 grocery_store_0)
        (inroom pool_table.n.01_1 grocery_store_0)
        (inroom floor.n.01_1 grocery_store_0)
    )

    (:goal
        (and
            (sliced ?watermelon.n.02_1)
            (sliced ?watermelon.n.02_2)
        )
    )
)