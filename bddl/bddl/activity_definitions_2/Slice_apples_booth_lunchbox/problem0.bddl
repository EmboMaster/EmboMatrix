(define (problem Slice_all_four_apples_on_the_booth_in_grocery_store_0_using_the_table_knife_and_put_the_slices_into_the_lunch_box_next_to_the_booth)
    (:domain omnigibson)
    (:objects
        apple.n.01_1 apple.n.01_2 apple.n.01_3 apple.n.01_4 - apple.n.01
        table_knife.n.01_1 - table_knife.n.01
        lunch_box.n.01_1 - lunch_box.n.01
        booth.n.01_1 - booth.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop apple.n.01_1 booth.n.01_1)
        (ontop apple.n.01_2 booth.n.01_1)
        (ontop apple.n.01_3 booth.n.01_1)
        (ontop apple.n.01_4 booth.n.01_1)
        (ontop table_knife.n.01_1 booth.n.01_1)
        (ontop lunch_box.n.01_1 booth.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom apple.n.01_1 grocery_store_0)
        (inroom apple.n.01_2 grocery_store_0)
        (inroom apple.n.01_3 grocery_store_0)
        (inroom apple.n.01_4 grocery_store_0)
        (inroom table_knife.n.01_1 grocery_store_0)
        (inroom lunch_box.n.01_1 grocery_store_0)
        (inroom booth.n.01_1 grocery_store_0)
        (inroom floor.n.01_1 grocery_store_0)
    )

    (:goal
        (and
            (sliced ?apple.n.01_1)
            (sliced ?apple.n.01_2)
            (sliced ?apple.n.01_3)
            (sliced ?apple.n.01_4)
            (inside ?apple.n.01_1 ?lunch_box.n.01_1)
            (inside ?apple.n.01_2 ?lunch_box.n.01_1)
            (inside ?apple.n.01_3 ?lunch_box.n.01_1)
            (inside ?apple.n.01_4 ?lunch_box.n.01_1)
        )
    )
)