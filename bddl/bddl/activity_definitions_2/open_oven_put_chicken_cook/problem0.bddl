(define (problem open_the_oven.n.01_in_the_kitchen_0_and_put_the_chicken.n.01_inside_then_toggle_on_the_oven.n.01_to_cook_the_chicken_for_me)
    (:domain omnigibson)
    (:objects
        oven.n.01_1 - oven.n.01
        chicken.n.01_1 - chicken.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (not (toggled_on oven.n.01_1))
        (not (cooked chicken.n.01_1))
        (inroom oven.n.01_1 kitchen_0)
        (inroom chicken.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (not (toggled_on oven.n.01_1))
        (and
            (inside chicken.n.01_1 oven.n.01_1)
            (toggled_on oven.n.01_1)
            (cooked chicken.n.01_1)
        )
    )
)