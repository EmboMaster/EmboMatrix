(define (problem go_to_the_storage_room_0_pick_up_the_carton.n.02_placed_on_the_shelf_open_the_carton.n.02_and_put_the_bok_choy.n.02_and_broccolini.n.01_inside_the_cooler.n.01_in_the_utility_room_0_to_freeze_them-0)
    (:domain omnigibson)
    (:objects
        carton.n.02_1 - carton.n.02
        shelf.n.01_1 - shelf.n.01
        bok_choy.n.02_1 - bok_choy.n.02
        broccolini.n.01_1 - broccolini.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop carton.n.02_1 shelf.n.01_1)
        (inside bok_choy.n.02_1 carton.n.02_1)
        (inside broccolini.n.01_1 carton.n.02_1)
        (not (open carton.n.02_1))
        (inroom shelf.n.01_1 storage_room_0)
        (inroom carton.n.02_1 storage_room_0)
        (inroom floor.n.01_1 storage_room_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom cooler.n.01_1 utility_room_0)
    )

    (:goal
        (and
            (open ?carton.n.02_1)
            (inside ?bok_choy.n.02_1 ?cooler.n.01_1)
            (inside ?broccolini.n.01_1 ?cooler.n.01_1)
            (frozen ?bok_choy.n.02_1)
            (frozen ?broccolini.n.01_1)
        )
    )
)