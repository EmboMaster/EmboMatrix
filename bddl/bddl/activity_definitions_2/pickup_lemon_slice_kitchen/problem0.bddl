(define (problem pick_up_the_lemon.n.01_from_the_breakfast_table_in_the_dining_room_0_carry_it_to_the_kitchen_0_and_slice_it_using_the_cleaver.n.01_on_the_chopping_board_on_the_booth_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        lemon.n.01_1 - lemon.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        chopping_board.n.01_1 - chopping_board.n.01
        booth.n.01_1 - booth.n.01
        cleaver.n.01_1 - cleaver.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop lemon.n.01_1 breakfast_table.n.01_1)
        (ontop chopping_board.n.01_1 booth.n.01_1)
        (ontop cleaver.n.01_1 booth.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom breakfast_table.n.01_1 dining_room_0)
        (inroom floor.n.01_1 dining_room_0)
        (inroom booth.n.01_1 kitchen_0)
        (inroom chopping_board.n.01_1 kitchen_0)
        (inroom cleaver.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (sliced ?lemon.n.01_1)
        )
    )
)