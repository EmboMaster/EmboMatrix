(define (problem toggle_on_the_oven.n.01_in_the_kitchen_0_pick_up_the_dumpling.n.01_from_the_counter_in_the_kitchen_0_cook_it_in_the_frying_pan.n.01_on_the_oven.n.01_and_place_the_cooked_dumpling.n.01_on_the_tray.n.01_in_the_kitchen_0)
    (:domain omnigibson)
    (:objects
        oven.n.01_1 - oven.n.01
        dumpling.n.01_1 - dumpling.n.01
        frying_pan.n.01_1 - frying_pan.n.01
        tray.n.01_1 - tray.n.01
        board.n.02_1 - board.n.02
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (not (toggled_on oven.n.01_1))
        (ontop dumpling.n.01_1 board.n.02_1)
        (ontop frying_pan.n.01_1 oven.n.01_1)
        (inroom oven.n.01_1 kitchen_0)
        (inroom dumpling.n.01_1 kitchen_0)
        (inroom frying_pan.n.01_1 kitchen_0)
        (inroom tray.n.01_1 kitchen_0)
        (inroom board.n.02_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom floor.n.01_1 kitchen_0)
    )

    (:goal
        (and
            (toggled_on ?oven.n.01_1)
            (cooked ?dumpling.n.01_1)
            (ontop ?dumpling.n.01_1 ?tray.n.01_1)
        )
    )
)