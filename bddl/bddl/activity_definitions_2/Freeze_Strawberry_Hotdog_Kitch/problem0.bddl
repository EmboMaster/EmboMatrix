(define (problem Pick_up_the_strawberry_from_the_booth_in_the_kitchen_0_and_put_it_inside_the_cooler_in_the_kitchen_0_to_freeze_it._Then_pick_up_the_hotdog_from_the_booth_in_the_kitchen_0_and_put_it_inside_the_cooler_to_freeze_it.)
    (:domain omnigibson)
    (:objects
        strawberry.n.01_1 - strawberry.n.01
        hotdog.n.02_1 - hotdog.n.02
        booth.n.01_1 - booth.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (ontop strawberry.n.01_1 booth.n.01_1)
        (ontop hotdog.n.02_1 booth.n.01_1)
        (inroom booth.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            (frozen ?strawberry.n.01_1)
            (frozen ?hotdog.n.02_1)
        )
    )
)