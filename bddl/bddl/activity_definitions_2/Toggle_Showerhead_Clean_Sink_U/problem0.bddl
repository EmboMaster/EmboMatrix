(define (problem Toggle_on_the_showerhead.n.01_in_the_bathroom_0_and_clean_the_dusty_sink.n.01_in_the_bathroom_0_using_the_rag.n.01_from_the_tray_in_the_bedroom_0._After_cleaning,_toggle_off_the_showerhead.n.01.)
    (:domain omnigibson)
    ;; Objects
    (:objects
        showerhead.n.01_1 - showerhead.n.01
        sink.n.01_1 - sink.n.01
        rag.n.01_1 - rag.n.01
        tray.n.01_1 - tray.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    ;; Initial State
    (:init
        (not (toggled_on showerhead.n.01_1))
        (dusty sink.n.01_1)
        (inside rag.n.01_1 tray.n.01_1)
        (inroom showerhead.n.01_1 bathroom_0)
        (inroom sink.n.01_1 bathroom_0)
        (inroom tray.n.01_1 bedroom_0)
        (inroom floor.n.01_1 bathroom_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    ;; Goal State
    (:goal
        (and
            (toggled_on ?showerhead.n.01_1)
            (not (dusty ?sink.n.01_1))
            (soaked ?rag.n.01_1)
            (not (toggled_on ?showerhead.n.01_1))
        )
    )
)