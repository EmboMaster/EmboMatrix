(define (problem Pick_up_the_beer_glass.n.01_from_the_sink_in_the_kitchen_0_place_it_inside_the_cooler.n.01_in_the_kitchen_0_to_freeze_it_then_close_the_cooler.n.01)
    (:domain omnigibson)
    (:objects
        beer_glass.n.01_1 - beer_glass.n.01
        sink.n.01_1 - sink.n.01
        cooler.n.01_1 - cooler.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        (inside beer_glass.n.01_1 sink.n.01_1)
        (inroom sink.n.01_1 kitchen_0)
        (inroom cooler.n.01_1 kitchen_0)
        (inroom floor.n.01_1 kitchen_0)
        (ontop agent.n.01_1 floor.n.01_1)
        (open cooler.n.01_1)
    )

    (:goal
        (and
            (frozen ?beer_glass.n.01_1)
            (inside ?beer_glass.n.01_1 ?cooler.n.01_1)
            (not 
                (open ?cooler.n.01_1)
            )
        )
    )
)