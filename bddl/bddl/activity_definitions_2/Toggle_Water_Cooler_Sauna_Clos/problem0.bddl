(define (problem Toggle_off_the_water_cooler.n.01_in_the_sauna_0_and_close_the_window.n.01)
    (:domain omnigibson)
    (:objects
        water_cooler.n.01_1 - water_cooler.n.01
        window.n.01_1 - window.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )
    
    (:init 
        (toggled_on water_cooler.n.01_1)
        (open window.n.01_1)
        (ontop agent.n.01_1 floor.n.01_1)
        (inroom water_cooler.n.01_1 sauna_0)
        (inroom window.n.01_1 sauna_0)
        (inroom floor.n.01_1 sauna_0)
    )
    
    (:goal 
        (toggled_on water_cooler.n.01_1)
        (and 
            (not 
                (toggled_on ?water_cooler.n.01_1)
            )
            (not 
                (open ?window.n.01_1)
            )
        )
    )
)