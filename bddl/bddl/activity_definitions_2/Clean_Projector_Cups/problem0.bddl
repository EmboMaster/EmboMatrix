(define (problem Go_to_the_shared_office_0_pick_up_the_scrub_brush_from_the_top_of_the_desk_and_clean_the_dusty_projector_on_the_conference_table_in_the_shared_office_0_then_go_to_the_break_room_0_pick_up_the_rag_from_the_booth_and_clean_the_2_stained_coffee_cups_on_the_dining_conference_table_in_the_break_room_0)
    (:domain omnigibson)
    (:objects
        scrub_brush.n.01_1 - scrub_brush.n.01
        projector.n.02_1 - projector.n.02
        desk.n.01_1 - desk.n.01
        conference_table.n.01_1 - conference_table.n.01
        rag.n.01_1 - rag.n.01
        coffee_cup.n.01_1 coffee_cup.n.01_2 - coffee_cup.n.01
        booth.n.01_1 - booth.n.01
        breakfast_table.n.01_1 - breakfast_table.n.01
        sink.n.01_1 - sink.n.01
        floor.n.01_1 - floor.n.01
        agent.n.01_1 - agent.n.01
    )

    (:init
        ;; Objects in shared_office_0
        (ontop scrub_brush.n.01_1 desk.n.01_1)
        (ontop projector.n.02_1 conference_table.n.01_1)
        (dusty projector.n.02_1)

        ;; Objects in break_room_0
        (ontop rag.n.01_1 booth.n.01_1)
        (ontop coffee_cup.n.01_1 breakfast_table.n.01_1)
        (ontop coffee_cup.n.01_2 breakfast_table.n.01_1)
        (stained coffee_cup.n.01_1)
        (stained coffee_cup.n.01_2)

        ;; Sink for water access
        (inroom sink.n.01_1 shared_office_0)

        ;; Rooms and agent
        (inroom desk.n.01_1 shared_office_0)
        (inroom conference_table.n.01_1 shared_office_0)
        (inroom booth.n.01_1 break_room_0)
        (inroom breakfast_table.n.01_1 break_room_0)
        (inroom floor.n.01_1 shared_office_0)
        (ontop agent.n.01_1 floor.n.01_1)
    )

    (:goal
        (and
            ;; Goal for cleaning the projector in shared_office_0
            (not (dusty ?projector.n.02_1))

            ;; Goal for cleaning coffee mugs in break_room_0
            (soaked ?rag.n.01_1)
            (not (stained ?coffee_cup.n.01_1))
            (not (stained ?coffee_cup.n.01_2))
        )
    )
)